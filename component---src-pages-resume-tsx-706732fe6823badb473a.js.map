{"version":3,"sources":["webpack:///./src/pages/resume.tsx","webpack:///./src/components/Section.tsx","webpack:///./node_modules/polished/lib/mixins/clearFix.js"],"names":["InlineList","TechList","ContributionList","DefineList","clearFix","UnorderedList","WorkList","OpenSourceContributionList","OpenSourceNameLink","ContributionLink","IssueLink","PullRequestLink","SummaryParagraph","related_links","require","topics","work_experiences","organizations","projects","opensource_contributions","activities","disorders","ResumePage","location","metadata","data","site","siteMetadata","page_name","property","typeof","content","href","map","link","key","name","url","topic","items","item","index","work","target","position","started_at","ended_at","descriptions","desc","technologes","tech","org","project","repo_url","contrib","Cls","type","number","activity","date","description","disorder","name_en","title","i","pageQuery","Section","SubSection","SectionTitle","SubSectionTitle","exports","__esModule","parent","_ref","clear","display","module"],"mappings":"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","file":"component---src-pages-resume-tsx-706732fe6823badb473a.js","sourcesContent":["import styled from '@emotion/styled';\nimport { graphql } from 'gatsby';\nimport clearFix from 'polished/lib/mixins/clearFix';\nimport React from 'react';\n\nimport Layout from '../components/Layout';\nimport {\n  Section,\n  SectionTitle,\n  SubSection,\n  SubSectionTitle,\n} from '../components/Section';\nimport SEO from '../components/SEO';\n\nconst InlineList = styled.ul`\n  display: inline-block;\n  margin: 0;\n  padding: 0;\n\n  li {\n    display: inline-block;\n    margin-right: 3px;\n\n    &::after {\n      content: ',';\n    }\n\n    &:last-child::after {\n      content: '';\n    }\n  }\n`;\nconst TechList = styled(InlineList)`\n  margin-left: 2.5rem;\n  margin-right: 2.5rem;\n`;\nconst ContributionList = styled(InlineList)`\n  li {\n    margin-right: 0.25rem;\n  }\n  li::after {\n    content: none;\n  }\n`;\nconst DefineList = styled.dl`\n  ${clearFix()}\n\n  > dt {\n    float: left;\n    font-weight: bold;\n    margin-right: 5px;\n    text-align: right;\n    width: 120px;\n\n    &::after {\n      content: ':';\n    }\n  }\n\n  > dd {\n    float: left;\n    width: calc(100% - 120px - 5px);\n  }\n`;\nconst UnorderedList = styled.ul`\n  margin-left: 2.5rem;\n  margin-right: 2.5rem;\n`;\nconst WorkList = styled.ul`\n  margin-top: 1.5rem;\n`;\nconst OpenSourceContributionList = styled.ul`\n  margin-left: 2.5rem;\n  margin-right: 2.5rem;\n`;\nconst OpenSourceNameLink = styled.a`\n  margin-right: 1rem;\n  margin-right: 1rem;\n`;\nconst ContributionLink = styled.a`\n  color: white;\n  border-radius: 0.2rem;\n  font-size: 0.75rem;\n  font-weight: bold;\n  padding: 0.15rem 0.25rem;\n  text-decoration: none;\n\n  &:hover {\n    color: white;\n  }\n`;\nconst IssueLink = styled(ContributionLink)`\n  background: #5bc0de;\n\n  &::before {\n    content: 'ISSUE ';\n  }\n`;\nconst PullRequestLink = styled(ContributionLink)`\n  background: #5cb85c;\n\n  &::before {\n    content: 'PR ';\n  }\n`;\nconst SummaryParagraph = styled.p`\n  margin-left: 1.5rem;\n`;\n\ninterface ResumePageProps extends PageProps {\n  data: {\n    site: SiteMetadataWrapper;\n  };\n}\ninterface RelatedLink {\n  name: string;\n  url: string;\n}\ninterface TechnologyItem {\n  name: string;\n  url: string;\n}\ninterface Technology {\n  name: string;\n  items: TechnologyItem[];\n}\ninterface WorkExperience {\n  name: string;\n  url?: string;\n  position: string;\n  started_at: string;\n  ended_at: string;\n  descriptions: string[];\n  technologes: string[];\n}\ninterface Organization {\n  name: string;\n  url: string;\n  started_at: string;\n  ended_at: string;\n  descriptions: string[];\n  technologes: string[];\n}\ninterface Project {\n  name: string;\n  url?: string;\n  repo_url?: string;\n  started_at: string;\n  ended_at: string;\n  descriptions: string[];\n  technologes: string[];\n}\ninterface Contribution {\n  type: 'issue' | 'pr';\n  url: string;\n  number: string;\n}\ninterface OpenSource {\n  name: string;\n  url: string;\n  items: Contribution[];\n}\ninterface Activity {\n  name: string;\n  url?: string;\n  date: string;\n  description: string;\n}\ninterface Disorder {\n  name: string;\n  name_en: string;\n  url: string;\n  descriptions: string[];\n}\n\nconst related_links: RelatedLink[] = require('../data/related_links.json');\nconst topics: Technology[] = require('../data/technologies.json');\nconst work_experiences: WorkExperience[] = require('../data/work_experiences.json');\nconst organizations: Organization[] = require('../data/organizations.json');\nconst projects: Project[] = require('../data/projects.json');\nconst opensource_contributions: OpenSource[] = require('../data/contributions.json');\nconst activities: Activity[] = require('../data/activities.json');\nconst disorders: Disorder[] = require('../data/disorders.json');\n\nconst ResumePage: React.FC<ResumePageProps> = ({\n  location,\n  data: {\n    site: { siteMetadata: metadata },\n  },\n}) => {\n  return (\n    <Layout location={location} metadata={metadata}>\n      <SEO page_name='Résumé' location={location} />\n      <section property='mainEntity' typeof='ProfilePage'>\n        <h1 property='mainContentOfPage'>Résumé</h1>\n        <meta property='inLanguage' content='ko-KR' />\n        <div property='about author mainEntity' typeof='Person'>\n          <Section>\n            <SectionTitle>Jinsu Kim</SectionTitle>\n            <DefineList>\n              <dt>Name</dt>\n              <dd property='name'>김진수</dd>\n              <dt>ID/Nickname</dt>\n              <dd>item4</dd>\n              <dt>Addr</dt>\n              <dd property='address' typeof='PostalAddress'>\n                <meta property='addressCountry' content='KR' />\n                <span property='addressLocality'>경기도 부천시</span>\n              </dd>\n              <dt>Email</dt>\n              <dd>\n                <a href='mailto:resume@jinsu.kim' property='email'>\n                  resume@jinsu.kim\n                </a>\n              </dd>\n              <dt>Objective</dt>\n              <dd property='jobTitle'>웹 개발자</dd>\n              <dt>Links</dt>\n              <dd>\n                <InlineList>\n                  {related_links.map(link => (\n                    <li key={link.name}>\n                      <a href={link.url} property='url'>\n                        {link.name}\n                      </a>\n                    </li>\n                  ))}\n                </InlineList>\n              </dd>\n            </DefineList>\n          </Section>\n          <Section>\n            <SectionTitle>Summary</SectionTitle>\n            <SummaryParagraph>\n              빠르게 성장하는 스타트업에서 백엔드 위주로 프론트까지 개발이 가능한 풀스택 지향 개발자.\n              전통적인서버, 범용 클라우드, Docker를 이용하여 테스트, CI, 배포, 모니터링등 전반적인 서비스 영역을 경험하고 개선이 가능.\n            </SummaryParagraph>\n          </Section>\n          <Section typeof='ItemList'>\n            <SectionTitle>Technologies</SectionTitle>\n            {topics.map(topic => {\n              return (\n                <SubSection key={topic.name}>\n                  <SubSectionTitle property='name'>\n                    {topic.name}\n                  </SubSectionTitle>\n                  <TechList>\n                    {topic.items.map((item, index) => {\n                      return (\n                        <li key={index}>\n                          <meta property='position' content={`${index}`} />\n                          <a href={item.url} property='item' typeof='Webpage'>\n                            <meta property='url' content={item.url} />\n                            <span property='name'>{item.name}</span>\n                          </a>\n                        </li>\n                      );\n                    })}\n                  </TechList>\n                </SubSection>\n              );\n            })}\n          </Section>\n          <Section>\n            <SectionTitle>Work Experiences</SectionTitle>\n            {work_experiences.map(work => {\n              const name = work.url ? (\n                <a property='url' href={work.url} target='_blank'>\n                  <span property='name'>{work.name}</span>\n                </a>\n              ) : (\n                <span property='name'>{work.name}</span>\n              );\n              return (\n                <SubSection\n                  property='worksFor'\n                  typeof='Organization'\n                  key={work.name}\n                >\n                  <SubSectionTitle>{name}</SubSectionTitle>\n                  <DefineList>\n                    <dt>포지션</dt>\n                    <dd>{work.position}</dd>\n                    <dt>근무기간</dt>\n                    <dd>\n                      <time property='startDate'>{work.started_at}</time>부터{' '}\n                      <time>{work.ended_at}</time>까지\n                    </dd>\n                    <dt>업무내용</dt>\n                    <dd>\n                      <WorkList>\n                        {work.descriptions.map((desc, index) => (\n                          <li key={index}>{desc}</li>\n                        ))}\n                      </WorkList>\n                    </dd>\n                    <dt>사용된 기술</dt>\n                    <dd>\n                      <InlineList>\n                        {work.technologes.map(tech => (\n                          <li key={tech}>{tech}</li>\n                        ))}\n                      </InlineList>\n                    </dd>\n                  </DefineList>\n                </SubSection>\n              );\n            })}\n          </Section>\n          <Section>\n            <SectionTitle>Organizations</SectionTitle>\n            {organizations.map(org => {\n              const name = org.url ? (\n                <a property='url' href={org.url} target='_blank'>\n                  <span property='name'>{org.name}</span>\n                </a>\n              ) : (\n                <span property='name'>{org.name}</span>\n              );\n              return (\n                <SubSection\n                  key={org.name}\n                  property='affiliation'\n                  typeof='Organization'\n                >\n                  <SubSectionTitle>{name}</SubSectionTitle>\n                  <DefineList>\n                    <dt>소속기간</dt>\n                    <dd>\n                      <time property='startDate'>{org.started_at}</time>부터{' '}\n                      <time>{org.ended_at}</time>까지\n                    </dd>\n                    <dt>활동내용</dt>\n                    <dd>\n                      <WorkList>\n                        {org.descriptions.map((desc, index) => (\n                          <li key={index}>{desc}</li>\n                        ))}\n                      </WorkList>\n                    </dd>\n                    <dt>사용된 기술</dt>\n                    <dd>\n                      <InlineList>\n                        {org.technologes.map(tech => (\n                          <li key={tech}>{tech}</li>\n                        ))}\n                      </InlineList>\n                    </dd>\n                  </DefineList>\n                </SubSection>\n              );\n            })}\n          </Section>\n          <Section>\n            <SectionTitle>Participated Projects</SectionTitle>\n            {projects.map(project => {\n              const name = project.url ? (\n                <a property='url' href={project.url} target='_blank'>\n                  <span property='name'>{project.name}</span>\n                </a>\n              ) : (\n                <span property='name'>{project.name}</span>\n              );\n              return (\n                <SubSection key={project.name}>\n                  <SubSectionTitle>{name}</SubSectionTitle>\n                  <DefineList>\n                    {project.repo_url ? (\n                      <>\n                        <dt>저장소</dt>\n                        <dd>\n                          <a href={project.repo_url} target='_blank'>\n                            {project.repo_url}\n                          </a>\n                        </dd>\n                      </>\n                    ) : null}\n                    <dt>참여기간</dt>\n                    <dd>\n                      <time property='startDate'>{project.started_at}</time>부터{' '}\n                      <time>{project.ended_at}</time>까지\n                    </dd>\n                    <dt>프로젝트 소개</dt>\n                    <dd>\n                      <WorkList>\n                        {project.descriptions.map((desc, index) => (\n                          <li key={index}>{desc}</li>\n                        ))}\n                      </WorkList>\n                    </dd>\n                    <dt>사용된 기술</dt>\n                    <dd>\n                      <InlineList>\n                        {project.technologes.map(tech => (\n                          <li key={tech}>{tech}</li>\n                        ))}\n                      </InlineList>\n                    </dd>\n                  </DefineList>\n                </SubSection>\n              );\n            })}\n          </Section>\n          <Section>\n            <SectionTitle>Open-Source Contributions</SectionTitle>\n            <OpenSourceContributionList>\n              {opensource_contributions.map((contrib, index) => {\n                return (\n                  <li key={index}>\n                    <OpenSourceNameLink href={contrib.url} target='_blank'>\n                      {contrib.name}\n                    </OpenSourceNameLink>\n                    <ContributionList>\n                      {contrib.items.map(item => {\n                        const Cls =\n                          item.type === 'pr' ? PullRequestLink : IssueLink;\n                        return (\n                          <li key={item.number}>\n                            <Cls href={item.url}>{item.number}</Cls>\n                          </li>\n                        );\n                      })}\n                    </ContributionList>\n                  </li>\n                );\n              })}\n            </OpenSourceContributionList>\n          </Section>\n          <Section>\n            <SectionTitle>Activities</SectionTitle>\n            {activities.map((activity, index) => {\n              const name = activity.url ? (\n                <a href={activity.url} target='_blank'>\n                  {activity.name}\n                </a>\n              ) : (\n                activity.name\n              );\n              return (\n                <SubSection key={index}>\n                  <SubSectionTitle>{name}</SubSectionTitle>\n                  <p>\n                    <time>({activity.date}) </time>\n                    {activity.description}\n                  </p>\n                </SubSection>\n              );\n            })}\n          </Section>\n          <Section>\n            <SectionTitle>Disorders</SectionTitle>\n            {disorders.map((disorder, index) => {\n              const name = `${disorder.name} (${disorder.name_en})`;\n              const title = disorder.url ? (\n                <a href={disorder.url} target='_blank'>\n                  {name}\n                </a>\n              ) : (\n                name\n              );\n              return (\n                <SubSection key={index}>\n                  <SubSectionTitle>{title}</SubSectionTitle>\n                  <UnorderedList>\n                    {disorder.descriptions.map((desc, i) => (\n                      <li key={i}>{desc}</li>\n                    ))}\n                  </UnorderedList>\n                </SubSection>\n              );\n            })}\n          </Section>\n        </div>\n      </section>\n    </Layout>\n  );\n};\nexport default ResumePage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        siteUrl\n        title\n        description\n        tags\n        socials {\n          twitter\n        }\n      }\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  margin-bottom: 1.5rem;\n`;\nexport const SubSection = styled(Section)`\n  p {\n    margin-left: 2.5rem;\n\n    time {\n      font-size: 0.8rem;\n    }\n  }\n`;\nexport const SectionTitle = styled.h2`\n  border-bottom: 1px dotted #aaa;\n  margin-bottom: 0.5rem;\n`;\nexport const SubSectionTitle = styled.h3`\n  margin-left: 1rem;\n  margin-right: 1rem;\n\n  a {\n    text-decoration: none;\n  }\n`;\n","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = clearFix;\n/**\n * CSS to contain a float (credit to CSSMojo).\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *    ...clearFix(),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${clearFix()}\n * `\n *\n * // CSS as JS Output\n *\n * '&::after': {\n *   'clear': 'both',\n *   'content': '\"\"',\n *   'display': 'table'\n * }\n */\n\nfunction clearFix(parent) {\n  var _ref;\n\n  if (parent === void 0) {\n    parent = '&';\n  }\n\n  var pseudoSelector = parent + \"::after\";\n  return _ref = {}, _ref[pseudoSelector] = {\n    clear: 'both',\n    content: '\"\"',\n    display: 'table'\n  }, _ref;\n}\n\nmodule.exports = exports[\"default\"];"],"sourceRoot":""}